第一章：C++简介
第二章：开始学习C++
	2.1：预处理器和头文件。预处理器将头文件定义替换为头文件内容，cpp文件则添加到一起
	2.2：名字空间。using 全体成员， using 局部成员， namepace::object 单独访问
第三章：处理数据
	3.1：类型装换，C++自动类型转换。
		将一种算数类型的值赋给另一种算数类型(C11的列表初始化不允许缩窄)
		表达式中包含不同的类型
		函数传参
	3.2：C11中的auto自动类型声明
第四章：复合类型
	4.1：列表初始化：C++98使用等号列表初始化，C++11使用初始化列表初始化
	4.2：字符串输入。cin[空白字符停止]，cin.getline()[回车字符停止]
		cin.get()[对比getline,不读取丢弃换行符]，
	4.3：union[联合]：使用最大内存
	4.4：enum[枚举]：枚举是个单独的类型。不要和整型互用。枚举的取值范围为2的次幂，
		在枚举范围类强制类型转换是有效的
	4.5：堆内存分配。静态联编-创建时则分配内存大小。动态联编-创建时不指定分配内存大小
	4.6：存储方式。自动存储、静态存储、动态存储
	4.7：数组的替代品：array、 vector
第五章：循环和关系表达式
	5.1：cin输入：使用 cin>> 符号时，cin会忽略空格和换行，并只有在输入回车的时候才
		会将字符序列发送给程序。cin.get(char)不会忽略空格和换行，但还是需要回车才能
		传入程序。
第六章：分支语句和逻辑运算符
	6.1：简单文件输入/输出。ofstream读取，>>，getline。ifstream写入 <<。
第七章：函数
	7.1：函数与数组。当且仅当在函数头或原型中，int * arr等同于 int arr[]
	7.2：函数与参数。函数的参数可以只声明，在使用时也可以传值。可以使用默认参数值，
		需要遵守从右到左的规则
第八章：函数探幽
	8.1：内联函数。利用函数代码替换函数调用，函数调用需要保存、跳转、执行、保存、跳转
		内联inline可以和C的宏相比较
	8.2：函数重载。重载取决于函数特征标=函数名+参数列表
	8.3：函数模板。非模板函数>显示具体化>显示实例化>隐式实例化
		具体化:隐式实例化，显示实例化，显示具体化
	8.4：模板重载解析。创建候选列表、匹配列表、确定最佳可行函数
		匹配列表：完全匹配[转换最少优先]、提升匹配、标准转换、用户定义转换
第九章：内存模型和名字空间
	9.1：单独编译。不要在头文件中定义变量和函数[除非为online,const,static]
	9.2：存储持续性。自动存储持续性[栈内存]，静态持续性[堆内存]
	9.3：作用域。代码块，文件内，全局
	9.4：连接性。无链接性，内部链接性[文件声明位置]，外部链接性
		exp:局部变量[自动存储持续性，代码块，无链接性]
			函数内静态变量[静态持续性，代码块，无链接性]
			文件内静态变量[静态持续性，文件内，内部链接性]
			全局变量[静态持续性，全局，外部链接性]
	9.5：说明符or限定符：
		存储说明符：register, static, extern, thread_local, mutable
		cv-限定符：const, volatile
	9.6：语言链接性：C名称修饰没有参数，C++名称修饰有参数，C++调用C名称修饰的库
		需要使用 extern "C" 修饰函数名
	9.7：new运算符。new运算符的结构为 new(sizeof(type))，定位new结构
		为 new (buffer) type[num]，从buffer中重新分配内存给新的指针
	9.8：名称空间。using编译指令，using声明，名称空间指定。
		匿名名称空间提供静态链接性的名字空间，只能用于当前文件内
第十章：对象和类
	10.1：默认构造函数。当且仅当没有提过任何构造函数才会创建默认构造函数
第十一章：使用类
	11.1：运算符重载。type operator symbol(arg)
	11.2：友元函数。friend type operator symbol(arg1, arg2)
	11.3：类的类型装换。
		隐式类型装换：利用构造函数构造之后再赋值，可使用 explicit 取消
		显示类型装换：直接利用构造赋值，这个相对安全，不容易产生二义性
		转换函数：operator type()
第十二章：类和动态内存分配
	12.1：特殊成员函数。默认构造函数，默认析构函数，复制构造函数，
		赋值运算符，地址运算符
第十三章：类继承
	13.1：基类指针、引用可以隐式指向派生类，但是只能使用基类的方法和数据
	13.2：类与类之前的关系。
		is-a<==>is-a-kind-of[抽象类继承，同类覆盖]：同类型关系
		has-a[包含，接口调用，私有继承]：部分，部件关系
		is-like[继承，同类新增]：比喻关系
		is-implemented-as-a[重载]：作为**为实现
		use-a[数据成员]：可以使用
	13.3：多态共有继承。在派生类中重新定义基类的方法，使用虚方法
	13.4：动静态联编。普通函数的早期函数编译为静态联编，虚函数的晚期编译为
		动态联编。
	13.5：向上类型强制转换[隐式]，向下类型强制转换[显式]
	13.6：抽象基类。不能定义，且包含纯虚函数或纯函数
	13.7：继承和动态内存分配。先调用基类构造，再调用派生类构造，析构相反，其中有元
		成员函数使用基类的指针调用
第十四章：C++中的代码重用
	14.1：重定义继承访问权限。同名函数的调用，using声明接口、数据名称
	14.2：多重继承与虚基类。虚基类继承方式解决多重继承的包含多个上层基类对象问题
		非虚基类多重继承，使用中间类构造基类。虚基类使用最上层类构造基类，中间层
		调用基类的无效。成员方法可以使用重定函数或者作用域限定调用
	14.3：模板类。模板类可以取代宏的类型替换
	14.4：模板多功能性：作为基类，作为组件，作为参数。可以为类模板提供默认值，但函
		数模板则不行
	14.5：模板具体化。隐式实例化，显示实例化，显示具体化，部分具体化
	14.6：模板类和友元。非模板友元[和模板没有任何关系]，约束模板友元[友元的类型取决
		于类被实例化的类型]，非约束模板友元[友元的类型不取决于类被实例化的类型]
第十五章：友元、异常和其它
	15.1：友元类的定义。某一类型专属处理另一类型
	15.2：友元成员函数。将友元类中的某个函数申明为另一个类的友元函数
	15.3：异常
	15.4：RTTI：dynamic_cast, typeid, type_info, decltype(C11)
	15.5：类型装换运算符：dynamic_case, const_cast, static_cast, reinterpret_case
第十六章：string类和标准模板库
	16.1：string常用功能。find(str,pos), find(str,pos,size), find(ch,pos) 等系列
	16.2：字符种类。char, wchar_t, char16_t, char32_t. 
					string, wstring, u16string, u32string
	16.3：智能指针类。auto_ptr, unique_ptr, week_ptr, shared_ptr
	16.4：C++ for。基于范围循环，基于容器循环
	16.5：STL常用容器。
		序列式容器[vector, list, deque]
		适配器容器[stack, queue, priority_queue]
		关联容器[set, multiset, map, multimap]
		C11新增：
			unordered_map，unordered_multimap
			unordered_set，unordered_multiset
			array，forward_list，tuple
	16.6：STL常用迭代器。输入、输出、正向、双向、随机访问迭代器
	16.7：STL常用函数对象。函数对象[函数，函数指针，重载()符号的对象]，函数符[函数名]
	16.8：STL常用算法。sort, copy, find, random_shuffle, set_union, set_intersection
		set_difference, transform,
	16.9：模板 initializer_list[C++11]。初始化列表，和C语言中的 va_list, 
		va_start, va_arg, va_end 使用概念一样
第十七章：输入、输出和文件
	17.1：输入输出概念：输入端连接流，数据流[缓冲区]，输出端连接流。ios为管理流类
	17.2：I/O基础属性：streambuf, ios_base, ios, ostream, istream, iostream
	17.3：格式化显示：oct, dec, hex, width, fill, precision
		ios_base。boolalpha, showbase, showpoint, uppercase, showpos, 
		ios_base。basefield[dec,oct,hex]，floatfield[fixed,scientific]，
			adjustfield[left,right,internal]
	17.4：流状态：eofbit[文件尾], badbit[无法判断的失败], failbit[未能读取或IO失败]
		, gooddit[0,正常流]
	17.5：输入方式。get,getline,ignore
		单字符输入：cin<<输入会跳过空格,制表,换行符号。get为全部读取，不跳过所有
		字符串输入：get[留换行符在缓冲中], getline[抽取并丢弃换行符]
	17.6：文件的输入和输出。
		文件输入[ifstream]:open,关联打开,is_open, getline, get, close
		文件输出[ofstream]:seekg, beg, cur, end