JS 用法:
	body 中使用为加载时想HTML中写文本
	hand 中一般为定义功能函数
	外部引用最为常用。提供外部使用功能接口
	
JS 输出：
	windows.alert()		弹出警告框。
	document.write() 	方法将内容写到 HTML 文档中
	innerHTML 			写入到 HTML 元素
	console.log() 		写入到浏览器的控制台
	
JS 语法：和 C/C++ 差不多。在定义数据类型的时候 JS 全为 var 类型。函数定义为python方式

JS 对象：类外定义函数为 function Name(arg):   
		 类内定义函数为 Name function(arg):
		 
JS 事件：
	常见事件：
		onchange	HTML 元素改变
		onclick		用户点击 HTML 元素
		onmouseover	用户在一个HTML元素上移动鼠标
		onmouseout	用户从一个HTML元素上移开鼠标
		onkeydown	用户按下键盘按键
		onload		浏览器已完成页面的加载
		onmouseup	鼠标按键被松开。
		
JS 字符串：
	length, match(), search(), replace(), slice(), split(), substr()
	
	
JS let和const:
	const 限制属性为只读
	let 限制属性为块作用域，用于消除局部变量和全局变量相同带来的差异
	
JS Json:
	数据为键/值对。 数据由逗号分隔。 大括号保存对象。 方括号保存数组
	JSON.parse(). JSON.stringify()
	
JS 函数：
	定义：
		可以通过匿名函数存储在变量中
		函数具有提升特性。所有函数可以在声明之前使用
		( functionName ) 可以实现函数自调用
		函数可以作为对象使用
	参数：
		函数的参数默认为 undefine, 可以使用自带参数来给参数赋值别的默认值
		函数有个内置的对象 arguments 对象。包含了函数调用的参数数组
		
JS DOM:通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素。
	获取HTML对象：getElementById(), getElementByTagName(), getElementsByClassName()
	改变HTML: 
		改变 HTML 输出流：document.write() 
		改变 HTML 内容：Element.innerHTML = 'xxx'
		改变 HTML 属性：Element.attribute = 'xxx'
		改变 CSS  样式：Element。style.propertyName = 'xxx'
	DOM 事件: HTML DOM 允许您使用 JavaScript 来向 HTML 元素分配事件，以及改变事件
		产生的效果
	DOM 常用事件：
		onload, onunload 进入页面或者离开页面
		onchange 改变鼠标 focus 位置
		onnouseover, onnouseout 鼠标进入、离开 html 元素
		onmousedown, onmouseup, onclick 鼠标按下，释放，点击
	DOM 添加事件响应和已出事件响应
		element.addEventListener(event, function, useCapture);
			第三个参数决定是内部还是外部元素的事件先触发
		removeEventListener()
	DOM 修改元素节点：
		document.createElement()，document.createTextNode()
		Element.appendChild()， Element.insertChild()，removeChild()
		Element.replaceChild(Element1, Element2)
	DOM 集合元素
		Collection : getElementByTagName()获取大量HTML元素
		NodeList : querySelectorAll()获取类似的文本节点

JS Window:浏览器对象模型
	Window: 
		var width=window.innerWidth
			|| document.documentElement.clientWidth
			|| document.body.clientWidth;

		var height=window.innerHeight
			|| document.documentElement.clientHeight
			|| document.body.clientHeight;
	Screen:
		screen.width		-总的屏幕宽度
		screen.height		-总的屏幕高度
		screen.availWidth - 可用的屏幕宽度
		screen.availHeight - 可用的屏幕高度
		screen.colorDepth	-色彩深度
		screen.pixelDepth	-屏幕大小
	Location:
		location.hostname 	返回 web 主机的域名
		location.pathname 	返回当前页面的路径和文件名
		location.port 		返回 web 主机的端口 （80 或 443）
		location.protocol 	返回所使用的 web 协议（http: 或 https:）
		location.href 		属性返回当前页面的 URL。
		location.pathname 	属性返回 URL 的路径名。
		location.assign() 	加载新的文档。
	弹窗：
		警告框：alert()
		确认框：confirm() 
		提示框：prompt()
		
JS 高级编程
	可以使用对象构造器创建对象。或者创建直接的实例
	对象构造器只能使用 prototype 添加属性或者方法
	Number 对象：
		Infinity 无穷大，数字最大为64位。NaN 判断是否为数字。可以使用 toString
	String 对象：
		indexOf, replace, split
	RegExp 对象：
		RegExp("RegName")， .test() 搜索内容的的指定值，并返回真假
		exec() 方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回 null
	Array 数组：
		js数组全部使用链表的方式处理即可